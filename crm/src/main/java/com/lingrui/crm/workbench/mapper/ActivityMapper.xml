<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lingrui.crm.workbench.mapper.ActivityMapper">
    <resultMap id="BaseResultMap" type="com.lingrui.crm.workbench.domain.Activity">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon May 23 17:28:15 CST 2022.
        -->
        <id column="id" property="id" jdbcType="CHAR"/>
        <result column="owner" property="owner" jdbcType="CHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="start_date" property="startDate" jdbcType="CHAR"/>
        <result column="end_date" property="endDate" jdbcType="CHAR"/>
        <result column="cost" property="cost" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="CHAR"/>
        <result column="create_by" property="createBy" jdbcType="VARCHAR"/>
        <result column="edit_time" property="editTime" jdbcType="CHAR"/>
        <result column="edit_by" property="editBy" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon May 23 17:28:15 CST 2022.
        -->
        id, owner, name, start_date, end_date, cost, description, create_time, create_by,
        edit_time, edit_by
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon May 23 17:28:15 CST 2022.
        -->
        select
        <include refid="Base_Column_List"/>
        from tbl_activity
        where id = #{id,jdbcType=CHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon May 23 17:28:15 CST 2022.
        -->
        delete from tbl_activity
        where id = #{id,jdbcType=CHAR}
    </delete>
    <insert id="insert" parameterType="com.lingrui.crm.workbench.domain.Activity">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon May 23 17:28:15 CST 2022.
        -->
        insert into tbl_activity (id, owner, name, start_date,
        end_date, cost, description,
        create_time, create_by, edit_time,
        edit_by)
        values (#{id,jdbcType=CHAR}, #{owner,jdbcType=CHAR}, #{name,jdbcType=VARCHAR}, #{startDate,jdbcType=CHAR},
        #{endDate,jdbcType=CHAR}, #{cost,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
        #{createTime,jdbcType=CHAR}, #{createBy,jdbcType=VARCHAR}, #{editTime,jdbcType=CHAR},
        #{editBy,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.lingrui.crm.workbench.domain.Activity">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon May 23 17:28:15 CST 2022.
        -->
        insert into tbl_activity
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="owner != null">
                owner,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="startDate != null">
                start_date,
            </if>
            <if test="endDate != null">
                end_date,
            </if>
            <if test="cost != null">
                cost,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="editTime != null">
                edit_time,
            </if>
            <if test="editBy != null">
                edit_by,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=CHAR},
            </if>
            <if test="owner != null">
                #{owner,jdbcType=CHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="startDate != null">
                #{startDate,jdbcType=CHAR},
            </if>
            <if test="endDate != null">
                #{endDate,jdbcType=CHAR},
            </if>
            <if test="cost != null">
                #{cost,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=CHAR},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="editTime != null">
                #{editTime,jdbcType=CHAR},
            </if>
            <if test="editBy != null">
                #{editBy,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.lingrui.crm.workbench.domain.Activity">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon May 23 17:28:15 CST 2022.
        -->
        update tbl_activity
        <set>
            <if test="owner != null">
                owner = #{owner,jdbcType=CHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="startDate != null">
                start_date = #{startDate,jdbcType=CHAR},
            </if>
            <if test="endDate != null">
                end_date = #{endDate,jdbcType=CHAR},
            </if>
            <if test="cost != null">
                cost = #{cost,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=CHAR},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="editTime != null">
                edit_time = #{editTime,jdbcType=CHAR},
            </if>
            <if test="editBy != null">
                edit_by = #{editBy,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=CHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lingrui.crm.workbench.domain.Activity">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon May 23 17:28:15 CST 2022.
        -->
        update tbl_activity
        set owner = #{owner,jdbcType=CHAR},
        name = #{name,jdbcType=VARCHAR},
        start_date = #{startDate,jdbcType=CHAR},
        end_date = #{endDate,jdbcType=CHAR},
        cost = #{cost,jdbcType=VARCHAR},
        description = #{description,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=CHAR},
        create_by = #{createBy,jdbcType=VARCHAR},
        edit_time = #{editTime,jdbcType=CHAR},
        edit_by = #{editBy,jdbcType=VARCHAR}
        where id = #{id,jdbcType=CHAR}
    </update>

    <!--
    int insertActivity(Activity activity);
    刚刚创建的市场活动，一定没有edit_by和edit_time，添加的时候也不添加
    -->
    <insert id="insertActivity" parameterType="com.lingrui.crm.workbench.domain.Activity">
        insert into tbl_activity (id, owner, name, start_date,
        end_date, cost, description,
        create_time, create_by)
        values (#{id,jdbcType=CHAR}, #{owner,jdbcType=CHAR}, #{name,jdbcType=VARCHAR}, #{startDate,jdbcType=CHAR},
        #{endDate,jdbcType=CHAR}, #{cost,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
        #{createTime,jdbcType=CHAR}, #{createBy,jdbcType=VARCHAR})
    </insert>

<!--    List<Activity> selectActivityByConditionForPage(Map<String, Object> map);-->
<!--    多表查询中，Activity对象中owner属性原本为user的id，现在填入owner的name，因为都是String所以没关系-->
<!--    在查询edit_by中，业务逻辑上市场活动是可以没有被编辑过的，所以用左外连接，保证没有edit_by数据的市场活动也能被查出来-->
<!--    使用动态sql，有查询条件才有where-->
<!--    应当按照创建日期，从创建时间新到旧排序，注意！应该先排序再limit-->
<!--    limit中的startNo = (pageNo - 1) * pageSize，应当在controller中计算好startNo封装进map-->
    <select id="selectActivityByConditionForPage" parameterType="map" resultMap="BaseResultMap">
        select a.id, u1.name AS owner, a.name, a.start_date, a.end_date,
               a.cost, a.description, a.create_time, u2.name AS create_by, a.edit_time,
               u3.name AS edit_by
        from tbl_activity AS a
        JOIN tbl_user AS u1
        on a.owner = u1.id
        JOIN tbl_user AS u2
        ON a.create_by = u2.id
        LEFT JOIN tbl_user AS u3
        ON a.edit_by = u3.id
        <where>
            <if test="name != null and name != ''">
                and a.name like '%' #{name} '%'
            </if>
            <if test="owner != null and owner != ''">
                and u1.name like '%' #{owner} '%'
            </if>
            <if test="startDate != null and startDate != ''">
                <!--and a.start_date >= #{startDate}使用转义符，避免左右尖括号在xml中冲突-->
                and a.start_date &gt;= #{startDate}
            </if>
            <if test="endDate != null and endDate != ''">
                <!--and #{endDate} >= a.endDate-->
                and a.end_date &lt;= #{endDate}
            </if>
        </where>
        order by a.create_time desc
        limit #{beginNo}, #{pageSize}
    </select>

<!--    List<Activity> selectActivityByCondition(Map<String, Object> map);-->
    <select id="selectActivityByCondition" parameterType="map" resultMap="BaseResultMap">
        select a.id, u1.name AS owner, a.name, a.start_date, a.end_date,
        a.cost, a.description, a.create_time, u2.name AS create_by, a.edit_time,
        u3.name AS edit_by
        from tbl_activity AS a
        JOIN tbl_user AS u1
        on a.owner = u1.id
        JOIN tbl_user AS u2
        ON a.create_by = u2.id
        LEFT JOIN tbl_user AS u3
        ON a.edit_by = u3.id
        <where>
            <if test="name != null and name != ''">
                and a.name like '%' #{name} '%'
            </if>
            <if test="owner != null and owner != ''">
                and u1.name like '%' #{owner} '%'
            </if>
            <if test="startDate != null and startDate != ''">
                <!--and a.start_date >= #{startDate}使用转义符，避免左右尖括号在xml中冲突-->
                and a.start_date &gt;= #{startDate}
            </if>
            <if test="endDate != null and endDate != ''">
                <!--and #{endDate} >= a.endDate-->
                and a.end_date &lt;= #{endDate}
            </if>
        </where>
        order by a.create_time desc
    </select>

<!--    int selectCountOfActivityByCondition(Map<String, Object> map);-->
<!--    返回值类型，resultType为整型-->
<!--    也必须是多表查询，才能把查询条件顺利传进去哦！-->
    <select id="selectCountOfActivityByCondition" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM tbl_activity AS a
        JOIN tbl_user AS u1
        ON a.owner = u1.id
        JOIN tbl_user AS u2
        ON a.create_by = u2.id
        LEFT JOIN tbl_user AS u3
        ON a.edit_by = u3.id
        <where>
            <if test="name != null and name != ''">
                and a.name like '%' #{name} '%'
            </if>
            <if test="owner != null and owner != ''">
                and u1.name like '%' #{owner} '%'
            </if>
            <if test="startDate != null and startDate != ''">
                <!--and a.start_date >= #{startDate}使用转义符，避免左右尖括号在xml中冲突-->
                and a.start_date &gt;= #{startDate}
            </if>
            <if test="endDate != null and endDate != ''">
                <!--and #{endDate} >= a.endDate-->
                and a.end_date &lt;= #{endDate}
            </if>
        </where>
    </select>

<!--    int deleteActivityByIds(String[] ids);          这里不能写resultType！默认会返回int的-->
    <delete id="deleteActivityByIds" parameterType="string">
        DELETE FROM tbl_activity
        WHERE id IN
        <foreach collection="array" item="id" separator="," open="(" close=")">
                <!--表示遍历的集合类型为数组     用,隔开，并且会自动除掉最后一个逗号-->
            #{id}
        </foreach>
    </delete>

<!--    Activity selectActivityById(String id);此处传回给前台的的owner就是id，因此不需要多表查询了-->
    <select id="selectActivityById" parameterType="string" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"></include>
        from tbl_activity
        where id = #{id}
    </select>

<!--    int updateActivity(Activity activity);-->
    <update id="updateActivity" parameterType="com.lingrui.crm.workbench.domain.Activity">
        update tbl_activity
        set owner = #{owner},
            name = #{name},
            start_date = #{startDate},
            end_date = #{endDate},
            cost = #{cost},
            description = #{description},
            edit_time = #{editTime},
            edit_by = #{editBy}
        where id = #{id};
    </update>

<!--    List<Activity> selectAllActivity();输出到excel里的user id外键应查出人名来！使用联合查询-->
    <select id="selectAllActivity" resultMap="BaseResultMap">
        SELECT a.id, owner.name AS owner, a.name, a.start_date, a.end_date, a.cost, a.description,
               a.create_time, creator.name AS create_by, a.edit_time, editor.name AS edit_by
        FROM tbl_activity AS a
        JOIN tbl_user AS owner ON a.owner = owner.id
        JOIN tbl_user AS creator ON a.create_by = creator.id
        LEFT JOIN tbl_user AS editor ON a.edit_by = editor.id
        ORDER BY a.create_time DESC
    </select>

<!--    List<Activity> selectActivityByIds(String[] ids);-->
    <select id="selectActivityByIds" parameterType="string" resultMap="BaseResultMap">
        SELECT a.id, owner.name AS owner, a.name, a.start_date, a.end_date, a.cost, a.description,
               a.create_time, creator.name AS create_by, a.edit_time, editor.name AS edit_by
        FROM tbl_activity AS a
                 JOIN tbl_user AS owner ON a.owner = owner.id
                 JOIN tbl_user AS creator ON a.create_by = creator.id
                 LEFT JOIN tbl_user AS editor ON a.edit_by = editor.id
        WHERE a.id IN
        <foreach collection="array" item="id" separator="," open="(" close=")">
            <!--表示遍历的集合类型为数组     用,隔开，并且会自动除掉最后一个逗号-->
            #{id}
        </foreach>
        ORDER BY a.create_time DESC
    </select>

<!--    int insertActivityList(List<Activity> activityList);-->
    <insert id="insertActivityList" parameterType="com.lingrui.crm.workbench.domain.Activity">
        insert into tbl_activity (id, owner, name, start_date,
                                  end_date, cost, description,
                                  create_time, create_by,
                                  edit_time, edit_by)
        values
        <foreach collection="list" item="activity" separator=",">
            (#{activity.id,jdbcType=CHAR},
             #{activity.owner,jdbcType=CHAR},
             #{activity.name,jdbcType=VARCHAR},
             #{activity.startDate,jdbcType=CHAR},
             #{activity.endDate,jdbcType=CHAR},
             #{activity.cost,jdbcType=VARCHAR},
             #{activity.description,jdbcType=VARCHAR},
             #{activity.createTime,jdbcType=CHAR},
             #{activity.createBy,jdbcType=VARCHAR},
             #{activity.editTime,jdbcType=VARCHAR},
             #{activity.editBy,jdbcType=VARCHAR})
        </foreach>
    </insert>
</mapper>